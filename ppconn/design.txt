【P2P数据请求模块（TCP）】

最多三个回合，被动推送。
不借助于公共服务器打洞协调（但须stun服务器侦测自身NAT类型）。

数据询问
--------
对于自身没有的数据，可向外进行询问。
询问包结构：
	- 目标数据的标识（Name:ID或哈希）
	- 自身地址（IP:Port）
	- 自身NAT类型：开放型/完全圆锥，受限圆锥，端口受限圆锥，对称NAT
	- 转发跳数累计（TTL - Time To Level），从0开始

直连端点如果有目标数据，则直接返回目标数据，不再转发。
没有目标数据的中间端点转发询问。
注：如果询问源为对称NAT型，而自身也一样则直接转发或终止（跳数达上限）。不必检查自己有无数据。
转发包结构：
	- 询问数据包（或上级转发包）
	- 来源主机标识（4字节）：
	  1. 连接池标识。2字节，连接池更新轮计数（全部更新后为一轮）
	  2. 主机索引。2字节，主机地址在连接池中的索引
	注：
	- 转发跳数加1
	- 每一层来源主机的标识串接后，形成一个转发层级链。
	
二级以上（非直连）端点若存在目标数据：
	1. 构造回馈信息包；
	2. 如果询问源为开放型，直连传递回馈信息包。否则原路回传。
回馈信息包：
	- 目标数据标识（同询问源）
	- 源端地址（同询问源）
	- 自身地址（开放数据源地址）
	- 自身NAT类型：开放型/完全圆锥，受限圆锥，端口受限圆锥，对称NAT
	  注：如果提供开放源地址，则设定为开放型。
	- 转发链：即原转发数据包里的来源主机序列
	- 回传跳数：初始值为原转发包内跳数值
	- 上级指针：指示来源端标识位置。从0开始，递减计数（0, -1, -2...）
	  0值表示无标识，由信息包构造者设置。
	  -1表示末尾最后一项（4字节单元），依此类推。

回传过程中（信息包构造者除外），每跳：
	1. 检查回传跳数，0值表示已回到询问源。结束。
	2. 回传跳数减1，上级指针减1。
	3. 从上级指针指示位置提取来源主机标识（连接池标识和主机索引）。
	   检查连接池标识，若与当前值不同则表示连接池已完全更新，原上级主机连接丢失。结束。
	4. 更新原来源主机标识为回传来源主机标识。回传。
	注：
	连接池实现需要保证每轮更新内的主机索引唯一。

询问端收到回馈信息包后，若尚未获得有效数据：
	1. 如果数据源为开放型，直连请求数据。
	2. 否则构造确认信息包，按其中的路径链传递确认。
确认信息包：
	- 请求源地址（即本端IP:Port）
	- 请求类型（打洞|连接）
	  如果自身是对称NAT型，则为请求打洞。否则为请求连接。
	- 数据源地址（IP:Port）
	- 传递计数：回馈信息包里上级指针的绝对值
	- 路径链：回馈信息包内转发链的逆序。
	注：
	1. 如果为请求连接，则发送确认包后即对目标打洞（TCP：1-2次），然后监听。
	2. 如果为请求打洞，则发送确认包后，不断尝试发起连接（如间隔3秒，持续2分钟）。

确认信息包转发：
	1. 检查传递计数，如果为0则已达终点。检查请求类型并执行相应操作。
	2. 提取并剥离路径链最后一条记录，获取目标主机。
	3. 传递计数减1。
	4. 转发新的确认信息包（已剥除本层连接信息）。


TTL值：
	为避免构成DDOS，通常询问数据包转发跳数上限值为2-3，共3-4跳（0-2/3）。
	假设连接数为8（各级同此），第一跳（TTL=0）时最多会有8个回馈（都有目标数据），
	第二跳为 8^2 => 64。
	如此类推：第3跳 8^3 => 512，第4跳 8^4 => 4096

小结：
- 询问最多3次往返，类似TCP的3次握手。
- 最终的数据请求由询问者发起，数据提供者仅回传必要的信息（回馈信息包）。
- 数据获取可能通过RPC调用，也由询问者发起。

