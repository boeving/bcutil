// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

/*
Package peepb is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	Piece
	PieceData
*/
package peepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Piece struct {
	Begin int64 `protobuf:"varint,1,opt,name=begin" json:"begin,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
}

func (m *Piece) Reset()                    { *m = Piece{} }
func (m *Piece) String() string            { return proto.CompactTextString(m) }
func (*Piece) ProtoMessage()               {}
func (*Piece) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Piece) GetBegin() int64 {
	if m != nil {
		return m.Begin
	}
	return 0
}

func (m *Piece) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type PieceData struct {
	Offset int64  `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Bytes  []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (m *PieceData) Reset()                    { *m = PieceData{} }
func (m *PieceData) String() string            { return proto.CompactTextString(m) }
func (*PieceData) ProtoMessage()               {}
func (*PieceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PieceData) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PieceData) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func init() {
	proto.RegisterType((*Piece)(nil), "peepb.Piece")
	proto.RegisterType((*PieceData)(nil), "peepb.PieceData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DL service

type DLClient interface {
	Get(ctx context.Context, in *Piece, opts ...grpc.CallOption) (*PieceData, error)
}

type dLClient struct {
	cc *grpc.ClientConn
}

func NewDLClient(cc *grpc.ClientConn) DLClient {
	return &dLClient{cc}
}

func (c *dLClient) Get(ctx context.Context, in *Piece, opts ...grpc.CallOption) (*PieceData, error) {
	out := new(PieceData)
	err := grpc.Invoke(ctx, "/peepb.DL/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DL service

type DLServer interface {
	Get(context.Context, *Piece) (*PieceData, error)
}

func RegisterDLServer(s *grpc.Server, srv DLServer) {
	s.RegisterService(&_DL_serviceDesc, srv)
}

func _DL_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Piece)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DLServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/peepb.DL/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DLServer).Get(ctx, req.(*Piece))
	}
	return interceptor(ctx, in, info, handler)
}

var _DL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "peepb.DL",
	HandlerType: (*DLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _DL_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}

func init() { proto.RegisterFile("config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x48, 0x4d, 0x2d, 0x48, 0x52,
	0xd2, 0xe7, 0x62, 0x0d, 0xc8, 0x4c, 0x4d, 0x4e, 0x15, 0x12, 0xe1, 0x62, 0x4d, 0x4a, 0x4d, 0xcf,
	0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x82, 0x70, 0x84, 0x04, 0xb8, 0x98, 0x53, 0xf3,
	0x52, 0x24, 0x98, 0xc0, 0x62, 0x20, 0xa6, 0x92, 0x25, 0x17, 0x27, 0x58, 0x83, 0x4b, 0x62, 0x49,
	0xa2, 0x90, 0x18, 0x17, 0x5b, 0x7e, 0x5a, 0x5a, 0x71, 0x6a, 0x09, 0x54, 0x17, 0x94, 0x07, 0x36,
	0xac, 0xb2, 0x24, 0xb5, 0x18, 0xac, 0x91, 0x27, 0x08, 0xc2, 0x31, 0xd2, 0xe6, 0x62, 0x72, 0xf1,
	0x11, 0x52, 0xe5, 0x62, 0x76, 0x4f, 0x2d, 0x11, 0xe2, 0xd1, 0x03, 0x3b, 0x40, 0x0f, 0x6c, 0x98,
	0x94, 0x00, 0x32, 0x0f, 0x64, 0x74, 0x12, 0x1b, 0xd8, 0x99, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x6d, 0x2d, 0xcb, 0xf4, 0xb6, 0x00, 0x00, 0x00,
}
