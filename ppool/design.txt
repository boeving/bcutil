【P2P连接模块（TCP）】

连接池为P2P连接的基础构件，被视为一个整体的逻辑单元。
向P2P连接请求数据，实际上是向整个网络请求数据。因为P2P的语境下，数据应该看作一种分布式的存在。
具体的对端提供协作服务和不确定的局部数据。


前提
----
端点需要知道自身NAT的类型。可借助于公共stun服务实现（或findings）。


数据询问
===============================================================================

三个阶段
--------
	1. 询问/转播
	2. 回馈/传递
	3. 确认/传递

转播与回馈由端点检查自身有无目标数据来体现。有则回馈，否则转播询问。

格式说明：
	- (n) 	占用字节数，bytes
	-  v) 	字节当前值，number-value
	- [n] 	占用比特位数，bits
	-  v]	当前位置位，bit-flag


询问
----
端点如果需要目标数据，可构造询问包向网络发起数据询问。

询问包：
	- (1)
	数据包类型。
		1) 询问。即当前包的值。
		2) 回馈。拥有数据的端点发回的回馈信息包。
		3) 确认。询问端确认需要数据的联系信息包。
		4) 探测。简单包，无回馈和确认逻辑，用于数据存在性探测广播，协调数据存储。
	- (1 + n)
	目标数据标识。
		详见后具体说明。
	- [6]
	自身NAT类型。
		1) 开放/完全圆锥。外部可以自由访问，包含UPnP公布成功者（单级NAT）。
		2) 受限圆锥。开放性仅次于第1类，可向单纯连出者打洞（4/5类）。
		3) 端口受限圆锥。可平级间打洞互连，无法从4/5类连入。
		4) 进入阻挡。NAT 禁止 TCP/SYN 无 ACK 的数据包进入。可连接性优于第5类。
		5) 对称型（Symmetric）。只能连出，且外出目标数量受制于NAT能力（大量的不同目标可导致NAT端口分配溢出）。
	- [2]
	自身IP类型
		1]  IPv4 地址。置位表示确认。
		1]  IPv6 地址。同上。
		11] 双置位，指同时包含1个IPv4和1个IPv6地址。IPv4地址在前。
	- (4+2|16+2|6+18)
	自身地址
		格式：IP + Port
		IP地址与端口紧邻为一组，端口固定2字节长。
	- (4)
	时间戳（微秒级）
		用于连接时间同步，也可用于转播评估。
		4字节长可支持到71分钟回绕，对于一个连接协商来说已足够长。
	- [4]
	转发跳数累计（TTL-Incr）
		逐跳加1。起始0值，为实际跳数。
		最多支持15跳，下同。
	- [4]
	当前剩余跳数
		逐跳减1。用户设置初始期望值。

数据标识：
	首字节为标识类型，分2级。
	- [4] 大分类。
	- [4] 小分类或属性。
	各支持15个类别。全0值保留不用，小分类0值表示默认状况。

	大分类：
	1) 指令字
	   数据段2字节。指定具体指令值。如：HOSTS, 获取连接池主机信息。
	   注：暂无小分类。
	2) 键值对
	   小分类：
	   0) 数据段12字节。8字节名称 + 4字节ID。
	      如：BLOCK:2245 高度为2245的区块数据。
	   2) 数据段双哈希，20 + 20字节（sha1）。
	      主要用于文件/数据的分片检索，前20字节为分片哈希序列的哈希（总集哈希），后20字节为目标分片的哈希。
	   3) 数据段 20+4+20 字节。
	      标记文件哈希、分片大小与分片总集哈希（sha1 + Size + sha1）。
	      注：分片总集哈希与分片大小相关。
	3) 哈希标识
	   小分类定义哈希算法：
	   	算法		数据段长
	   	------------------------
	   	MD5,    	16
	   	SHA1,   	20
	   	SHA224, 	28
	   	SHA256, 	32
	   	SHA384, 	48
	   	SHA512, 	64
	4) 区块/哈希
	   小分类：
	   0) 数据段44字节，其中4字节区块号，40字节为交易哈希。
	      注：40字节可能为8字节的时间戳+32字节的哈希摘要。
	5) 变长序列
	   1+n 结构，数据段最长256字节。首字节定义变长序列的长度。
	   注：暂无小分类。


转播
----
对于询问包，端点检查自身是否拥有目标数据，如果有则创建回馈，否则向与自身连接的端点转播询问（除了发来询问的上级）。
如果询问源为对称NAT型而自身也是，则仅转播或终止，而不必检查自己有无数据。

对于探测包，仅检查自身是否拥有目标数据，有则终止（结束当前探测流），无则转播。

转发包：
	- (...)
	询问数据包或上级转发包。
	- (4)
	询问主机标识：
		- (2)
		连接池更新轮计数（全部更新后为一轮）
		- (2)
		主机地址在连接池中的索引
	注：
	每一级询问主机的标识串接后，形成一个转发链。

	注记：
	转发链不采用IP和端口记录。理由如下：
		- 更小的数据包，且回避了IPv4和IPv6的差别。
		- 更好的隐私性和安全性，避免IP/网络拓扑结构暴露。
		- 更好的包容性。如果端点能够确认询问主机，则可不受连接池影响（如重新连接）。
		- 约束信息中转仅限于已连接者。
	
端点操作：
	检查是否存在目标数据。
	- 若存在。
	  构造回馈信息包原路回传。
	  注：如果是最初直连的端点的回馈，询问源会发现回馈包里的数据源地址就是对端地址（如果对端直接提供而不是通过开放源的话）。
	- 若没有：
	  1. 转发跳数（高4位）加1。
	  2. 转发跳数（低4位）减1。
	  3. 构造转发包转播。

回馈
----
回馈包：
	- (...)
	目标数据标识（同询问源）
	- (...)
	源端地址（同询问源）
	- (4)
	同步时间。
	由询问源里的时间戳加上一个时间段而来。仅用于打洞协调。
	它并不考虑询问源的本地时间是否准确，仅加上一个增量时间段，是它愿意等待的时间。
	因为可能会有多个询问陆续到达（针对同一目标数据），这是一个集体打洞行为。
	- 自身地址（或开放数据源的地址）
	- 自身NAT类型：开放型/完全圆锥，受限圆锥，端口受限圆锥，对称NAT
	  注：如果提供开放源地址，则设置为开放型。
	- 转发链：即原转发数据包里的来源主机序列克隆
	- 回传跳数：1/2字节，初始值为询问包内转发跳数高4位值。
	- 上级指针：1/2字节，指示来源端标识的位置。从0开始，递减计数（0, -1, -2...）
	  0值适用信息包初始构造者（来源已知）。
	  -1表示末尾最后一项（4字节单元），依此类推。

回传过程中（信息包构造者除外），每跳：
	1. 检查回传跳数，0值表示已回到询问源。结束。
	2. 回传跳数减1，上级指针减1。
	3. 从上级指针指示位置提取来源主机标识（连接池标识和主机索引）。
	   检查连接池标识，若与当前值不同则表示连接池已完全更新，原上级主机连接丢失。结束。
	4. 更新原来源主机标识为回传来源主机标识。回传。
	注：
	连接池实现需要保证每轮更新内的主机索引唯一。


确认/传递
---------
询问端收到回馈信息包后，若尚未获得有效数据：
	1. 如果数据源为开放型，直连请求数据。
	2. 否则构造确认信息包，按路径链传递确认信息。
确认信息包：
	- 请求源地址（即本端IP:Port）
	- 请求类型（打洞|连接）
	  如果自身是对称NAT型，则为请求打洞。否则为请求连接。
	- 数据源地址（IP:Port）
	- 传递计数：回馈信息包里上级指针的绝对值
	- 路径链：回馈信息包里转发链的逆序。
	注：
	1. 如果为请求连接，则发送确认包后即对目标打洞（TCP：1-2次），然后监听。
	2. 如果为请求打洞，则发送确认包后，不断尝试发起连接（如间隔3秒，持续2分钟）。

确认信息包传递：
	1. 检查传递计数，如果为0则已达终点。检查请求类型并执行相应操作。
	2. 提取并剥离路径链最后一条记录，获取传递目标主机地址。
	3. 传递计数减1。
	4. 传递新的确认信息包（已剥除本层路径信息）。


TTL值
-----
	为避免造成DDOS，询问数据包转发跳数上限通常为2-3，即3-4跳（0-2/3）。
	是否有效，与数据在网络中的冗余度（或热度）有关。

	该值由询问端设置，通常以较小的值开始尝试（如1或0）。如果数据较冷门，可能需要逐渐提高多次尝试。
	收到询问的客户端通常会按规定转播，但它也可能查看询问包里的时间戳，评估网络延迟情况后决定是否转播。
	警告！
	越高的初始值会导致越多的回复，因此可能导致对自身的DDOS。

	参考：
	假设连接数为8（各级同此），则不同跳数后可以覆盖的端点数：
	- 第1跳最多8个回馈：8^1 => 8
	- 第2跳为：8^2 => 64；
	- 第3跳为：8^3 => 512，第4跳 8^4 => 4096 ....
	- 第10跳： 8^10 => 10亿+ （连网存在重叠端，故实际远低于此）

小结
----
- 询问最多3次往返，类似TCP的3次握手。
- 最终的数据请求由询问者发起，数据提供者仅回传必要的信息（回馈信息包）。
- 数据获取可能通过RPC调用，也由询问者发起。

